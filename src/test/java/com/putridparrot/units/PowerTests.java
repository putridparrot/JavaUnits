// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

package com.putridparrot.units;

import net.jqwik.api.constraints.DoubleRange;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import net.jqwik.api.*;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class PowerTests {
	@Property(tries = 100)
	public void testFromMechanicalHorsePowerToMetricHorsePowerAndBack(@ForAll @DoubleRange(min = -1E12, max = 1E12) double value) {
		final double convertTo = Power.MechanicalHorsePower.toMetricHorsePower(value);
		final double convertBack = Power.MetricHorsePower.toMechanicalHorsePower(convertTo);
		assertEquals(value, convertBack, 0.01);
	}

	@ParameterizedTest
	@CsvSource({ "65.0971,65.9999749","121.317,122.9996","86.7962,88.0" })
	public void testConvertKnownMechanicalHorsePowerToMetricHorsePower(double input, double expectation) {
		final double result = Power.MechanicalHorsePower.toMetricHorsePower(input);
		assertEquals(expectation, result, 0.01);
	}

	@Property(tries = 100)
	public void testFromMetricHorsePowerToMechanicalHorsePowerAndBack(@ForAll @DoubleRange(min = -1E12, max = 1E12) double value) {
		final double convertTo = Power.MetricHorsePower.toMechanicalHorsePower(value);
		final double convertBack = Power.MechanicalHorsePower.toMetricHorsePower(convertTo);
		assertEquals(value, convertBack, 0.01);
	}

	@ParameterizedTest
	@CsvSource({ "126.734,125.0","91.2483,90.0","425.825,419.9997" })
	public void testConvertKnownMetricHorsePowerToMechanicalHorsePower(double input, double expectation) {
		final double result = Power.MetricHorsePower.toMechanicalHorsePower(input);
		assertEquals(expectation, result, 0.01);
	}

}
