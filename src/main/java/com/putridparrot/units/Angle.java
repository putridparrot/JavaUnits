// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

package com.putridparrot.units;

import java.lang.Math;

/**
 * Angle conversion functions
 */
public final class Angle {
	/**
	 * Degrees conversion functions
	 */
	public static class Degrees {
		/**
		 * Converts the supplied Degrees value to Radians
		 * @param value The Degrees input value
		 * @return The value in Radians
		 */
		public static double toRadians(double value) {
			return value * Math.PI/180.0;
		}
		/**
		 * Converts the supplied Degrees value to Gradians
		 * @param value The Degrees input value
		 * @return The value in Gradians
		 */
		public static double toGradians(double value) {
			return value * 200.0/180.0;
		}
		/**
		 * Converts the supplied Degrees value to Milliradians
		 * @param value The Degrees input value
		 * @return The value in Milliradians
		 */
		public static double toMilliradians(double value) {
			return value * 17.4533;
		}
		/**
		 * Converts the supplied Degrees value to Minute Of Arc
		 * @param value The Degrees input value
		 * @return The value in Minute Of Arc
		 */
		public static double toMinuteOfArc(double value) {
			return value * 60.0;
		}
		/**
		 * Converts the supplied Degrees value to Seconds Of Arc
		 * @param value The Degrees input value
		 * @return The value in Seconds Of Arc
		 */
		public static double toSecondsOfArc(double value) {
			return value * 3600.0;
		}
	}
	/**
	 * Gradians conversion functions
	 */
	public static class Gradians {
		/**
		 * Converts the supplied Gradians value to Degrees
		 * @param value The Gradians input value
		 * @return The value in Degrees
		 */
		public static double toDegrees(double value) {
			return value * 180.0/200.0;
		}
		/**
		 * Converts the supplied Gradians value to Radians
		 * @param value The Gradians input value
		 * @return The value in Radians
		 */
		public static double toRadians(double value) {
			return value * Math.PI/200.0;
		}
		/**
		 * Converts the supplied Gradians value to Milliradians
		 * @param value The Gradians input value
		 * @return The value in Milliradians
		 */
		public static double toMilliradians(double value) {
			return value * 15.708;
		}
		/**
		 * Converts the supplied Gradians value to Minute Of Arc
		 * @param value The Gradians input value
		 * @return The value in Minute Of Arc
		 */
		public static double toMinuteOfArc(double value) {
			return value * 54.0;
		}
		/**
		 * Converts the supplied Gradians value to Seconds Of Arc
		 * @param value The Gradians input value
		 * @return The value in Seconds Of Arc
		 */
		public static double toSecondsOfArc(double value) {
			return value * 3240.0;
		}
	}
	/**
	 * Milliradians conversion functions
	 */
	public static class Milliradians {
		/**
		 * Converts the supplied Milliradians value to Degrees
		 * @param value The Milliradians input value
		 * @return The value in Degrees
		 */
		public static double toDegrees(double value) {
			return value * 180.0/(1000.0 * Math.PI);
		}
		/**
		 * Converts the supplied Milliradians value to Radians
		 * @param value The Milliradians input value
		 * @return The value in Radians
		 */
		public static double toRadians(double value) {
			return value / 1000.0;
		}
		/**
		 * Converts the supplied Milliradians value to Gradians
		 * @param value The Milliradians input value
		 * @return The value in Gradians
		 */
		public static double toGradians(double value) {
			return value * 200.0/(1000.0 * Math.PI);
		}
		/**
		 * Converts the supplied Milliradians value to Minute Of Arc
		 * @param value The Milliradians input value
		 * @return The value in Minute Of Arc
		 */
		public static double toMinuteOfArc(double value) {
			return value * (60.0 * 180.0)/(1000.0 * Math.PI);
		}
		/**
		 * Converts the supplied Milliradians value to Seconds Of Arc
		 * @param value The Milliradians input value
		 * @return The value in Seconds Of Arc
		 */
		public static double toSecondsOfArc(double value) {
			return value * (3600.0 * 180.0)/(1000.0 * Math.PI);
		}
	}
	/**
	 * Minute Of Arc conversion functions
	 */
	public static class MinuteOfArc {
		/**
		 * Converts the supplied Minute Of Arc value to Degrees
		 * @param value The Minute Of Arc input value
		 * @return The value in Degrees
		 */
		public static double toDegrees(double value) {
			return value / 60.0;
		}
		/**
		 * Converts the supplied Minute Of Arc value to Radians
		 * @param value The Minute Of Arc input value
		 * @return The value in Radians
		 */
		public static double toRadians(double value) {
			return value * Math.PI/(60.0 * 180.0);
		}
		/**
		 * Converts the supplied Minute Of Arc value to Gradians
		 * @param value The Minute Of Arc input value
		 * @return The value in Gradians
		 */
		public static double toGradians(double value) {
			return value / 54.0;
		}
		/**
		 * Converts the supplied Minute Of Arc value to Milliradians
		 * @param value The Minute Of Arc input value
		 * @return The value in Milliradians
		 */
		public static double toMilliradians(double value) {
			return value * (1000.0 * Math.PI) / (60.0 * 180.0);
		}
		/**
		 * Converts the supplied Minute Of Arc value to Seconds Of Arc
		 * @param value The Minute Of Arc input value
		 * @return The value in Seconds Of Arc
		 */
		public static double toSecondsOfArc(double value) {
			return value * 60.0;
		}
	}
	/**
	 * Radians conversion functions
	 */
	public static class Radians {
		/**
		 * Converts the supplied Radians value to Degrees
		 * @param value The Radians input value
		 * @return The value in Degrees
		 */
		public static double toDegrees(double value) {
			return value * 180.0/Math.PI;
		}
		/**
		 * Converts the supplied Radians value to Gradians
		 * @param value The Radians input value
		 * @return The value in Gradians
		 */
		public static double toGradians(double value) {
			return value * 200.0/Math.PI;
		}
		/**
		 * Converts the supplied Radians value to Milliradians
		 * @param value The Radians input value
		 * @return The value in Milliradians
		 */
		public static double toMilliradians(double value) {
			return value * 1000.0;
		}
		/**
		 * Converts the supplied Radians value to Minute Of Arc
		 * @param value The Radians input value
		 * @return The value in Minute Of Arc
		 */
		public static double toMinuteOfArc(double value) {
			return value * (60.0 * 180.0)/Math.PI;
		}
		/**
		 * Converts the supplied Radians value to Seconds Of Arc
		 * @param value The Radians input value
		 * @return The value in Seconds Of Arc
		 */
		public static double toSecondsOfArc(double value) {
			return value * (3600.0 * 180.0)/Math.PI;
		}
	}
	/**
	 * Seconds Of Arc conversion functions
	 */
	public static class SecondsOfArc {
		/**
		 * Converts the supplied Seconds Of Arc value to Degrees
		 * @param value The Seconds Of Arc input value
		 * @return The value in Degrees
		 */
		public static double toDegrees(double value) {
			return value / 3600.0;
		}
		/**
		 * Converts the supplied Seconds Of Arc value to Radians
		 * @param value The Seconds Of Arc input value
		 * @return The value in Radians
		 */
		public static double toRadians(double value) {
			return value * Math.PI/(180.0 * 3600.0);
		}
		/**
		 * Converts the supplied Seconds Of Arc value to Gradians
		 * @param value The Seconds Of Arc input value
		 * @return The value in Gradians
		 */
		public static double toGradians(double value) {
			return value / 3240.0;
		}
		/**
		 * Converts the supplied Seconds Of Arc value to Milliradians
		 * @param value The Seconds Of Arc input value
		 * @return The value in Milliradians
		 */
		public static double toMilliradians(double value) {
			return value * (1000.0 * Math.PI) / (180.0 * 3600.0);
		}
		/**
		 * Converts the supplied Seconds Of Arc value to Minute Of Arc
		 * @param value The Seconds Of Arc input value
		 * @return The value in Minute Of Arc
		 */
		public static double toMinuteOfArc(double value) {
			return value / 60.0;
		}
	}
}
