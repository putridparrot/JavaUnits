// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

package com.putridparrot.units;

/**
 * Speed conversion functions
 */
public final class Speed {
	/**
	 * Feet Per Second conversion functions
	 */
	public static class FeetPerSecond {
		/**
		 * Converts the supplied Feet Per Second value to Miles Per Hour
		 * @param value The Feet Per Second input value
		 * @return The value in Miles Per Hour
		 */
		public static double toMilesPerHour(double value) {
			return value * 0.681818;
		}
		/**
		 * Converts the supplied Feet Per Second value to Kilometres Per Hour
		 * @param value The Feet Per Second input value
		 * @return The value in Kilometres Per Hour
		 */
		public static double toKilometresPerHour(double value) {
			return value * 1.09728;
		}
		/**
		 * Converts the supplied Feet Per Second value to Metres Per Second
		 * @param value The Feet Per Second input value
		 * @return The value in Metres Per Second
		 */
		public static double toMetresPerSecond(double value) {
			return value * 0.3048;
		}
		/**
		 * Converts the supplied Feet Per Second value to Knots
		 * @param value The Feet Per Second input value
		 * @return The value in Knots
		 */
		public static double toKnots(double value) {
			return value * 0.592484;
		}
	}
	/**
	 * Kilometres Per Hour conversion functions
	 */
	public static class KilometresPerHour {
		/**
		 * Converts the supplied Kilometres Per Hour value to Miles Per Hour
		 * @param value The Kilometres Per Hour input value
		 * @return The value in Miles Per Hour
		 */
		public static double toMilesPerHour(double value) {
			return value * 0.621371;
		}
		/**
		 * Converts the supplied Kilometres Per Hour value to Feet Per Second
		 * @param value The Kilometres Per Hour input value
		 * @return The value in Feet Per Second
		 */
		public static double toFeetPerSecond(double value) {
			return value * 0.911344;
		}
		/**
		 * Converts the supplied Kilometres Per Hour value to Metres Per Second
		 * @param value The Kilometres Per Hour input value
		 * @return The value in Metres Per Second
		 */
		public static double toMetresPerSecond(double value) {
			return value * 0.277778;
		}
		/**
		 * Converts the supplied Kilometres Per Hour value to Knots
		 * @param value The Kilometres Per Hour input value
		 * @return The value in Knots
		 */
		public static double toKnots(double value) {
			return value * 0.539957;
		}
	}
	/**
	 * Knots conversion functions
	 */
	public static class Knots {
		/**
		 * Converts the supplied Knots value to Miles Per Hour
		 * @param value The Knots input value
		 * @return The value in Miles Per Hour
		 */
		public static double toMilesPerHour(double value) {
			return value * 1.15078;
		}
		/**
		 * Converts the supplied Knots value to Kilometres Per Hour
		 * @param value The Knots input value
		 * @return The value in Kilometres Per Hour
		 */
		public static double toKilometresPerHour(double value) {
			return value * 1.852;
		}
		/**
		 * Converts the supplied Knots value to Feet Per Second
		 * @param value The Knots input value
		 * @return The value in Feet Per Second
		 */
		public static double toFeetPerSecond(double value) {
			return value * 1.68781;
		}
		/**
		 * Converts the supplied Knots value to Metres Per Second
		 * @param value The Knots input value
		 * @return The value in Metres Per Second
		 */
		public static double toMetresPerSecond(double value) {
			return value * 0.514444;
		}
	}
	/**
	 * Metres Per Second conversion functions
	 */
	public static class MetresPerSecond {
		/**
		 * Converts the supplied Metres Per Second value to Miles Per Hour
		 * @param value The Metres Per Second input value
		 * @return The value in Miles Per Hour
		 */
		public static double toMilesPerHour(double value) {
			return value * 2.23694;
		}
		/**
		 * Converts the supplied Metres Per Second value to Kilometres Per Hour
		 * @param value The Metres Per Second input value
		 * @return The value in Kilometres Per Hour
		 */
		public static double toKilometresPerHour(double value) {
			return value * 3.6;
		}
		/**
		 * Converts the supplied Metres Per Second value to Feet Per Second
		 * @param value The Metres Per Second input value
		 * @return The value in Feet Per Second
		 */
		public static double toFeetPerSecond(double value) {
			return value * 3.28084;
		}
		/**
		 * Converts the supplied Metres Per Second value to Knots
		 * @param value The Metres Per Second input value
		 * @return The value in Knots
		 */
		public static double toKnots(double value) {
			return value * 1.94384;
		}
	}
	/**
	 * Miles Per Hour conversion functions
	 */
	public static class MilesPerHour {
		/**
		 * Converts the supplied Miles Per Hour value to Kilometres Per Hour
		 * @param value The Miles Per Hour input value
		 * @return The value in Kilometres Per Hour
		 */
		public static double toKilometresPerHour(double value) {
			return value * 1.60934;
		}
		/**
		 * Converts the supplied Miles Per Hour value to Feet Per Second
		 * @param value The Miles Per Hour input value
		 * @return The value in Feet Per Second
		 */
		public static double toFeetPerSecond(double value) {
			return value * 1.46667;
		}
		/**
		 * Converts the supplied Miles Per Hour value to Metres Per Second
		 * @param value The Miles Per Hour input value
		 * @return The value in Metres Per Second
		 */
		public static double toMetresPerSecond(double value) {
			return value * 0.44704;
		}
		/**
		 * Converts the supplied Miles Per Hour value to Knots
		 * @param value The Miles Per Hour input value
		 * @return The value in Knots
		 */
		public static double toKnots(double value) {
			return value * 0.868976;
		}
	}
}
